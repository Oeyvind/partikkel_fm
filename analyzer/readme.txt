To use analyzer:

python generate_and_analyze.py dataset mode nosave
- dataset: set the base filename for generated files 
- Normal operation example:
  python generate_and_analyze.py test csound
  - will render audio with the parameter settings for graindurs, modindices, delays, grainpitches
- set the parameters in the file {dataset}_parameters.py
  - see for example test_parameters.py
- all parameter combinations will be rendered, so it creates a large number of files in /data
- each parameter combination creates a .sco file and a .txt file
- the txt file contains analysis data generated by Csound
  - it has one line for each sideband subdivision (from 1 to 10)
  - each line has: 
    - number of sidebands found
    - max number of sidebands expoected for this sideband subdivision (in as many octaves as we look into)
    - crest value 
      - the first line has global crest for the sound
      - other lines have average crest over all frequency bands for that sideband division
- mode can be 'csound' or 'spectrogram'
- the third argument can be used to generate sound files (for debugging)
  - usually this is not needed, as we can generate sound files and spectrograms on demand
  - when clicking on a square in the navigator (2d display), the program will open spectrogram and wave file
  - if the sound spectrogram does not exist, we will synthesize the sound from score and generate spectrogram 

python display.py dataset mode
- will show a 3d plot of the analysis data
- mode can be 'analyze' or 'saved'
  - analyze will read all files, create the data array (and save it to file)
  - saved will just read the data array from file
  - both modes will display the 3d plot (use analyze the first run, and then saved for later runs where the data has not changed)

